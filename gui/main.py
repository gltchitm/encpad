import gi

gi.require_version("Gtk", "3.0")
from gi.repository import Gtk

from store import store

from create_new_notepad import CreateNewNotepad
from notepad_editor import NotepadEditor
from unlock_notepad import UnlockNotepad
from welcome import Welcome

import crypto

store.set_value("VERSION", "0.1.0-beta")
store.set_value(
    "ENCRYPTED_DISCLAIMER",
    "[DANGER]\n" +
    "This file is ENCRYPTED. It must be opened in Encpad " +
    "(or a compatible editor/viewer)!\n" +
    "Do NOT edit this file in a normal text editor -- " +
    "doing so may cause permanent data loss!\n" +
    "-=-=-=-=-=-=-=-=-=-=-=-\n"
)

def dialog(window, message_type, buttons, title, message):
    dialog = Gtk.MessageDialog(
        transient_for=window,
        message_type=message_type,
        buttons=buttons,
        text=title
    )
    dialog.format_secondary_text(message)
    dialog.run()
    dialog.destroy()
class Encpad(Gtk.Window):
    def __init__(self):
        Gtk.Window.__init__(self, title="Encpad")

        store.set_value("password", None)
        store.set_value("notepad", None)

        self.set_border_width(20)

        self.set_default_size(360, 560)
        self.set_resizable(False)

        stack = Gtk.Stack()
        stack.set_transition_type(Gtk.StackTransitionType.SLIDE_LEFT_RIGHT)
        stack.set_transition_duration(350)

        store.set_value("stack", stack)

        store.set_value("notepad_editor", NotepadEditor())

        stack.add_named(Welcome(), "welcome")
        stack.add_named(UnlockNotepad(), "unlock_notepad")
        stack.add_named(CreateNewNotepad(), "create_new_notepad")
        stack.add_named(store.get_value("notepad_editor"), "notepad_editor")

        stack.set_visible_child_name("welcome")
        
        self.connect("delete-event", self.window_delete)
        self.add(stack)
    def window_delete(self, widget, event):
        if store.get_value("confirm_close"):
            dialog = Gtk.MessageDialog(
                transient_for=window,
                message_type=Gtk.MessageType.QUESTION,
                buttons=Gtk.ButtonsType.YES_NO,
                text="You have unsaved changes"
            )
            dialog.format_secondary_text("Are you sure you want to exit without saving them?")
            response = dialog.run()
            dialog.destroy()
            if response != Gtk.ResponseType.YES:
                return True
        return False

window = Encpad()
window.connect("destroy", Gtk.main_quit)
window.show_all()

Gtk.main()
